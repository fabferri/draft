{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location1": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "location2": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region"
      }
    },
    "vNet1Name": {
      "type": "string",
      "defaultValue": "vnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet2Name": {
      "type": "string",
      "defaultValue": "vnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "vNet1AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.10.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "vNet2AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.20.0/24",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "subnet1",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "subnet2",
      "metadata": {
        "description": "Arbitrary name for the Azure Subnet"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.10.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.20.0/27",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.10.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet1AddressPrefix address space"
      }
    },
    "gateway2subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.20.224/27",
      "metadata": {
        "description": "CIDR block for gateway subnet, subset of vNet2AddressPrefix address space"
      }
    },
    "gateway1PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP1Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP1",
      "metadata": {
        "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
      }
    },
    "gateway1PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw1IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
      }
    },
    "gateway2PublicIP2Name": {
      "type": "string",
      "defaultValue": "vpnGw2IP2",
      "metadata": {
        "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
      }
    },
    "gateway1Name": {
      "type": "string",
      "defaultValue": "vpnGw1",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gateway2Name": {
      "type": "string",
      "defaultValue": "vpnGw2",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw2",
      "allowedValues": [
        "VpnGw2",
        "VpnGw2AZ",
        "VpnGw3",
        "VpnGw3AZ",
        "VpnGw4",
        "VpnGw4AZ",
        "VpnGw5",
        "VpnGw5AZ"
      ],
      "metadata": {
        "description": "The Sku of the Gateway"
      }
    },
    "localGateway1Name1": {
      "type": "string",
      "defaultValue": "localGateway11",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway2"
      }
    },
    "localGateway1Name2": {
      "type": "string",
      "defaultValue": "localGateway12",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway2"
      }
    },
    "localGateway2Name1": {
      "type": "string",
      "defaultValue": "localGateway21",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway1"
      }
    },
    "localGateway2Name2": {
      "type": "string",
      "defaultValue": "localGateway22",
      "metadata": {
        "description": "Arbitrary name for gateway resource representing VPN gateway1"
      }
    },
    "asnGtw1": {
      "type": "int",
      "defaultValue": 65010,
      "metadata": {
        "description": "BGP Autonomous System Number of the VNet"
      }
    },
    "asnGtw2": {
      "type": "int",
      "defaultValue": 65020,
      "metadata": {
        "description": "BGP Autonomous System Number of the remote VNet"
      }
    },
    "connection1Name1": {
      "type": "string",
      "defaultValue": "gtw1-to-gtw2-1",
      "metadata": {
        "description": "Arbitrary name for the new connection between Azure VNet and other network"
      }
    },
    "connection1Name2": {
      "type": "string",
      "defaultValue": "gtw1-to-gtw2-2",
      "metadata": {
        "description": "Arbitrary name for the new connection between Azure VNet and other network"
      }
    },
    "connection2Name1": {
      "type": "string",
      "defaultValue": "gtw2-to-gtw1-1",
      "metadata": {
        "description": "Arbitrary name for the new connection between Azure VNet and other network"
      }
    },
    "connection2Name2": {
      "type": "string",
      "defaultValue": "gtw2-to-gtw1-2",
      "metadata": {
        "description": "Arbitrary name for the new connection between Azure VNet and other network"
      }
    },
    "sharedKey": {
      "type": "string",
      "defaultValue": "secretPSK-101",
      "metadata": {
        "description": "Shared key (PSK) for IPSec tunnel"
      }
    },
    "vm1Name": {
      "type": "string",
      "defaultValue": "vm1",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vm2Name": {
      "type": "string",
      "defaultValue": "vm2",
      "metadata": {
        "description": "Name of the sample VM to create"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1ls",
      "allowedValues": [
        "Standard_B1ls",
        "Standard_B1s",
        "Standard_DS1_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for sample VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "User password for sample VM"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The storage account type for the disks of the VM"
      }
    }
  },
  "variables": {
    "location1": "[parameters('location1')]",
    "location2": "[parameters('location2')]",
    "vNet1Name": "[parameters('vNet1Name')]",
    "vNet2Name": "[parameters('vNet2Name')]",
    "subnet1Name": "[parameters('subnet1Name')]",
    "subnet2Name": "[parameters('subnet2Name')]",
    "vNet1AddressPrefix": "[parameters('vNet1AddressPrefix')]",
    "vNet2AddressPrefix": "[parameters('vNet2AddressPrefix')]",
    "subnet1Prefix": "[parameters('subnet1Prefix')]",
    "subnet2Prefix": "[parameters('subnet2Prefix')]",
    "gateway1SubnetPrefix": "[parameters('gateway1SubnetPrefix')]",
    "gateway2SubnetPrefix": "[parameters('gateway2SubnetPrefix')]",
    "vnet1ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]",
    "vnet2ID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]",
    "gateway1subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'),'GatewaySubnet') ]",
    "gateway2subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'),'GatewaySubnet') ]",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet1Name'), variables('subnet1Name') )]",
    "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vNet2Name'), variables('subnet2Name') )]",
    "gateway1Name": "[parameters('gateway1Name')]",
    "gateway2Name": "[parameters('gateway2Name')]",
    "localGateway1Name1": "[parameters('localGateway1Name1')]",
    "localGateway1Name2": "[parameters('localGateway1Name2')]",
    "localGateway2Name1": "[parameters('localGateway2Name1')]",
    "localGateway2Name2": "[parameters('localGateway2Name2')]",
    "gateway1PublicIP1Name": "[parameters('gateway1PublicIP1Name')]",
    "gateway1PublicIP2Name": "[parameters('gateway1PublicIP2Name')]",
    "gateway2PublicIP1Name": "[parameters('gateway2PublicIP1Name')]",
    "gateway2PublicIP2Name": "[parameters('gateway2PublicIP2Name')]",
    "asnGtw1": "[parameters('asnGtw1')]",
    "asnGtw2": "[parameters('asnGtw2')]",
    "connection1Name1": "[parameters('connection1Name1')]",
    "connection1Name2": "[parameters('connection1Name2')]",
    "connection2Name1": "[parameters('connection2Name1')]",
    "connection2Name2": "[parameters('connection2Name2')]",
    "vm1Name": "[parameters('vm1Name')]",
    "vm2Name": "[parameters('vm2Name')]",
    "nic1Name": "[concat(variables('vm1Name'), '-nic')]",
    "nic2Name": "[concat(variables('vm2Name'), '-nic')]",
    "imagePublisher": "OpenLogic",
    "imageOffer": "CentOS",
    "imageSKU": "7.6",
    "OSDiskName": "osDisk",
    "vm1PublicIPName": "[concat(variables('vm1Name'), '-pubIP')]",
    "vm2PublicIPName": "[concat(variables('vm2Name'), '-pubIP')]",
    "vmSize": "[parameters('vmSize')]",
    "storageAccountType": "[parameters('storageAccountType')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet1Name')]",
      "apiVersion": "2019-06-01",
      "location": "[variables('location1')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet1AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway1subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vNet2Name')]",
      "apiVersion": "2019-06-01",
      "location": "[variables('location2')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNet2AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet2Prefix')]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[variables('gateway2subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP1Name')]",
      "apiVersion": "2019-09-01",
      "comments": "public IP of the VPN Gateway1-instance 0",
      "location": "[variables('location1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP1Name')]",
      "apiVersion": "2019-09-01",
      "comments": "public IP of the VPN Gateway2-instance 0",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway1PublicIP2Name')]",
      "apiVersion": "2019-09-01",
      "comments": "public IP of the VPN Gateway1- instance 1",
      "location": "[variables('location1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gateway2PublicIP2Name')]",
      "apiVersion": "2019-09-01",
      "comments": "public IP of the VPN Gateway2- instance 1",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway1Name')]",
      "apiVersion": "2019-09-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway1Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway1Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw1')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('gateway2Name')]",
      "apiVersion": "2019-09-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]"
              }
            },
            "name": "vnetGateway2Config1"
          },
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gateway2SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]"
              }
            },
            "name": "vnetGateway2Config2"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": true,
        "vpnGatewayGeneration": "Generation2",
        "bgpSettings": {
          "asn": "[variables('asnGtw2')]"
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "createLocalGateways",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
              "scope": "outer"
          },
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {
            "gateway2PubIP1": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP1Name')), '2017-11-01').ipAddress]",
            "gateway2PubIP2": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('gateway2PublicIP2Name')), '2017-11-01').ipAddress]",
            "gateway1PubIP1": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name')), '2017-11-01').ipAddress]",
            "gateway1PubIP2": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP2Name')), '2017-11-01').ipAddress]"
          },
          "resources": [
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[variables('localGateway1Name1')]",
      "apiVersion": "2019-06-01",
      "comments": "public IP of remote IPSec peer",
      "location": "[variables('location1')]",
//      "dependsOn": [
//        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]"
//    ],
      "properties": {
        "gatewayIpAddress": "[variables('gateway2PubIP1')]",
        "bgpSettings": {
          "asn": "[variables('asnGtw2')]",
          "bgpPeeringAddress":   "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))).bgpSettings.bgpPeeringAddress , ','))]",
          "peerWeight": 0
        }
      }
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[variables('localGateway1Name2')]",
      "apiVersion": "2019-06-01",
      "comments": "public IP of remote IPSec peer",
      "location": "[variables('location1')]",
//      "dependsOn": [
//        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]"
//    ],
      "properties": {
        "gatewayIpAddress": "[variables('gateway2PubIP2')]",
        "bgpSettings": {
          "asn": "[variables('asnGtw2')]",
          "bgpPeeringAddress":   "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))).bgpSettings.bgpPeeringAddress , ','))]",
          "peerWeight": 0
        }
      }
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[variables('localGateway2Name1')]",
      "apiVersion": "2019-06-01",
      "comments": "public IP of remote IPSec peer",
      "location": "[variables('location2')]",
//      "dependsOn": [
//          "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]",
//          "[resourceId('Microsoft.Network/publicIPAddresses',variables('gateway1PublicIP1Name'))]"
//      ],
      "properties": {
        "gatewayIpAddress": "[variables('gateway1PubIP1')]",
        "bgpSettings": {
          "asn": "[variables('asnGtw1')]",
          "bgpPeeringAddress": "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))).bgpSettings.bgpPeeringAddress , ','))]",
          // "[split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))).bgpSettings.bgpPeeringAddress , ',')[0]]",
          //"[variables('gtw2RemotebgpPeeringAddress')]",
          "peerWeight": 0
        }
      }
    },
    {
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[variables('localGateway2Name2')]",
      "apiVersion": "2019-06-01",
      "comments": "public IP of remote IPSec peer",
      "location": "[variables('location2')]",
//      "dependsOn": [
//          "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]"
//      ],
      "properties": {
        "gatewayIpAddress": "[variables('gateway1PubIP2')]",
        "bgpSettings": {
          "asn": "[variables('asnGtw1')]",
          "bgpPeeringAddress": "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))).bgpSettings.bgpPeeringAddress , ','))]",
          // "[split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))).bgpSettings.bgpPeeringAddress , ',')[0]]",
          //"[variables('gtw2RemotebgpPeeringAddress')]",
          "peerWeight": 0
        }
      }
    },
    {
      "type": "Microsoft.Network/connections",
      "name": "[variables('connection1Name1')]",
      "apiVersion": "2019-06-01",
      "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP1]",
      "location": "[variables('location1')]",
      "dependsOn": [
//        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway1Name1'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway1Name1'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBGP": "true"
      }
    },
    {
      "type": "Microsoft.Network/connections",
      "name": "[variables('connection1Name2')]",
      "apiVersion": "2019-06-01",
      "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP2]",
      "location": "[variables('location1')]",
      "dependsOn": [
//        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway1Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway1Name2'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway1Name2'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBGP": "true"
      }
    },
    {
      "type": "Microsoft.Network/connections",
      "name": "[variables('connection2Name1')]",
      "apiVersion": "2019-06-01",
      "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP1]",
      "location": "[variables('location2')]",
      "dependsOn": [
//        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway2Name1'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway2Name1'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBGP": "true"
      }
    },
    {
      "type": "Microsoft.Network/connections",
      "name": "[variables('connection2Name2')]",
      "apiVersion": "2019-06-01",
      "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP2]",
      "location": "[variables('location2')]",
      "dependsOn": [
//        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('gateway2Name'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway2Name2'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('localGateway2Name2'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('sharedKey')]",
        "enableBGP": "true"
      }
    }
],
"outputs": {
  "gtw1PublicIPAddress1": {
    "type":"string",
    "value" : "[variables('gateway1PubIP1')]" 
  },
  "gtw1PublicIPAddress2": {
    "type":"string",
    "value" : "[variables('gateway1PubIP2')]" 
  }
}
}
}
},


    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm1PublicIPName')]",
      "apiVersion": "2019-09-01",
      "location": "[variables('location1')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm2PublicIPName')]",
      "apiVersion": "2019-09-01",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic1Name')]",
      "apiVersion": "2019-09-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm1PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet1Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic2Name')]",
      "apiVersion": "2019-09-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PublicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet2Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm2PublicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1Name')]",
      "apiVersion": "2019-03-01",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm1Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic1Name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm2Name')]",
      "apiVersion": "2019-03-01",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vm2Name'),'-OSdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic2Name'))]"
            }
          ]
        }
      }
    }
  ]
}